version: "3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    networks: 
      - project-network
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    hostname: kafka
    container_name: kafka
    networks: 
      - project-network
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  
  kafka-init:
    image: confluentinc/cp-kafka:6.2.0
    container_name: kafka-init
    user: root
    networks: 
      - project-network
    depends_on:
      - kafka
    volumes:
      - ./kafka/topic-creator.sh:/topic-creator.sh
    command: "bash -c 'chmod +x /topic-creator.sh && /topic-creator.sh'"

  ssi-producer:
    build: ./ssi_producer
    container_name: ssi-producer
    networks:
      - project-network
    depends_on:
      kafka-init:
        condition: service_completed_successfully
    ports:
      - 8001:8001

  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
    networks:
      - project-network

  spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
    networks:
      - project-network

  spark-worker-2:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
    networks:
      - project-network
  
  cassandra:
    image: cassandra:3.11.2
    container_name: cassandra
    hostname: cassandra
    networks:
      - project-network
    ports:
      - "9042:9042"
    environment:
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
      - "CASSANDRA_USER=cassandra"
      - "CASSANDRA_HOST=cassandra"
      - "CASSANDRA_PASSWORD=cassandra"
    restart: always
    # volumes:
    #   - ./cassandra/cassandra_data:/var/lib/cassandra
    healthcheck:
      test: ["CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces"]
      interval: 15s
      timeout: 10s
      retries: 10

  cassandra-load-keyspace:
    container_name: cassandra-load-keyspace
    image: cassandra:3.11.2
    networks:
      - project-network
    depends_on:
      cassandra:
        condition: service_healthy
    volumes:
      - ./cassandra/db_create.cql:/schema.cql
    command: /bin/bash -c "echo loading cassandra keyspace && cqlsh cassandra -u cassandra -p cassandra -f /schema.cql"
  
  spark-process:
    build: ./spark-process
    container_name: spark-process
    ports:
      - "8002:8002"
      - "4040:4040"
    environment:
      - SPARK_PUBLIC_DNS=localhost
    depends_on:
      - spark-master
      - spark-worker-1
      - spark-worker-2
      - cassandra
      - cassandra-load-keyspace
      - kafka
      - kafka-init
    networks:
      - project-network

  grafana:
    image: grafana/grafana-oss:latest
    networks:
    - project-network
    ports:
    - "3000:3000"
    environment:
      - "GF_INSTALL_PLUGINS=hadesarchitect-cassandra-datasource,grafana-clock-panel"
    depends_on:
      - cassandra

  
networks:
  project-network:
    driver: bridge